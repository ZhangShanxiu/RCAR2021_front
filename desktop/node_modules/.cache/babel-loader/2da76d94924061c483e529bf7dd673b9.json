{"remainingRequest":"/home/su/code/RCAR2021Web_V2/desktop/node_modules/babel-loader/lib/index.js!/home/su/code/RCAR2021Web_V2/desktop/node_modules/eslint-loader/index.js??ref--13-0!/home/su/code/RCAR2021Web_V2/desktop/src/router.js","dependencies":[{"path":"/home/su/code/RCAR2021Web_V2/desktop/src/router.js","mtime":1607402207987},{"path":"/home/su/code/RCAR2021Web_V2/desktop/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/su/code/RCAR2021Web_V2/desktop/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/su/code/RCAR2021Web_V2/desktop/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from \"vue\";\nimport Router from \"vue-router\";\nimport Main from \"./views/Main.vue\";\nVue.use(Router);\nvar router = new Router({\n  routes: [{\n    path: \"/\",\n    component: Main,\n    name: \"main\",\n    meta: {\n      title: 'RCAR 2020 - Conference on Real-time Computing and Robotics - IEEE Robotics and Automation Society' // Description: 'The 2020 IEEE International Conference on Real-time Computing and Robotics (IEEE RCAR 2020) will take place from August 2 to 6, 2020 in Asahikawa, Japan. The objective of this conference is to provide a forum for researchers in robotics and real-time computing to share the latest results and to explore the opportunity of research collaboration. With wide applications of robots in industry and services sectors, real-time computing plays one of the major roles in various topics in robotics including real-time control, human-robot interactions, sensor perception and fusion, robot intelligence, etc. The scope of IEEE RCAR 2020 covers research, development and applications in the dynamic and exciting areas of real-time computing and robotics.',\n      // Keywords: 'IEEE, RCAR, Robot, robotic, conference, automation, society, www.ieee-rcar.org, ieee-rcar',\n\n    },\n    children: [{\n      path: \"/\",\n      name: \"home\",\n      component: function component() {\n        return import(\n        /* */\n        \"./views/Home.vue\");\n      }\n    }, {\n      path: \"/history\",\n      name: \"history\",\n      // route level code-splitting\n      // this generates a separate chunk (about.[hash].js) for this route\n      // which is lazy-loaded when the route is visited.\n      component: function component() {\n        return import(\n        /* webpackChunkName: \"about\" */\n        \"./views/History.vue\");\n      }\n    }, {\n      path: \"/Committee\",\n      // route level code-splitting\n      // this generates a separate chunk (about.[hash].js) for this route\n      // which is lazy-loaded when the route is visited.\n      component: function component() {\n        return import(\n        /* webpackChunkName: \"about\" */\n        \"./views/Committee.vue\");\n      },\n      props: true\n    }, {\n      path: \"/program\",\n      // route level code-splitting\n      // this generates a separate chunk (about.[hash].js) for this route\n      // which is lazy-loaded when the route is visited.\n      component: function component() {\n        return import(\n        /* webpackChunkName: \"about\" */\n        \"./views/Program.vue\");\n      },\n      props: true\n    }, {\n      path: \"/FinalSubmission\",\n      // route level code-splitting\n      // this generates a separate chunk (about.[hash].js) for this route\n      // which is lazy-loaded when the route is visited.\n      component: function component() {\n        return import(\n        /* webpackChunkName: \"about\" */\n        \"./views/FinalSubmission.vue\");\n      },\n      props: true\n    }, {\n      path: \"/InitialSubmission\",\n      // route level code-splitting\n      // this generates a separate chunk (about.[hash].js) for this route\n      // which is lazy-loaded when the route is visited.\n      component: function component() {\n        return import(\n        /* webpackChunkName: \"about\" */\n        \"./views/InitialSubmission.vue\");\n      },\n      props: true\n    }, {\n      path: \"/CallForPapers\",\n      // route level code-splitting\n      // this generates a separate chunk (about.[hash].js) for this route\n      // which is lazy-loaded when the route is visited.\n      component: function component() {\n        return import(\n        /* webpackChunkName: \"about\" */\n        \"./views/CallForPapers.vue\");\n      },\n      props: true\n    }, {\n      path: \"/Registration\",\n      // route level code-splitting\n      // this generates a separate chunk (about.[hash].js) for this route\n      // which is lazy-loaded when the route is visited.\n      component: function component() {\n        return import(\n        /* webpackChunkName: \"about\" */\n        \"./views/Registration.vue\");\n      },\n      props: true\n    }, {\n      path: \"/Plenary\",\n      // route level code-splitting\n      // this generates a separate chunk (about.[hash].js) for this route\n      // which is lazy-loaded when the route is visited.\n      component: function component() {\n        return import(\n        /* webpackChunkName: \"about\" */\n        \"./views/Plenary.vue\");\n      },\n      props: true\n    }, {\n      path: \"/Keynote\",\n      // route level code-splitting\n      // this generates a separate chunk (about.[hash].js) for this route\n      // which is lazy-loaded when the route is visited.\n      component: function component() {\n        return import(\n        /* webpackChunkName: \"about\" */\n        \"./views/Keynote.vue\");\n      },\n      props: true\n    }, {\n      path: \"/Technical\",\n      // route level code-splitting\n      // this generates a separate chunk (about.[hash].js) for this route\n      // which is lazy-loaded when the route is visited.\n      component: function component() {\n        return import(\n        /* webpackChunkName: \"about\" */\n        \"./views/Technical.vue\");\n      },\n      props: true\n    }, {\n      path: \"/tutorials\",\n      // route level code-splitting\n      // this generates a separate chunk (about.[hash].js) for this route\n      // which is lazy-loaded when the route is visited.\n      component: function component() {\n        return import(\n        /* webpackChunkName: \"about\" */\n        \"./views/Tutorial.vue\");\n      },\n      props: true\n    }, {\n      path: \"/:title\",\n      name: \"articles\",\n      // route level code-splitting\n      // this generates a separate chunk (about.[hash].js) for this route\n      // which is lazy-loaded when the route is visited.\n      component: function component() {\n        return import(\n        /* webpackChunkName: \"about\" */\n        \"./views/Article.vue\");\n      },\n      props: true\n    }, {\n      path: \"/:title\",\n      name: \"articles\",\n      // route level code-splitting\n      // this generates a separate chunk (about.[hash].js) for this route\n      // which is lazy-loaded when the route is visited.\n      component: function component() {\n        return import(\n        /* webpackChunkName: \"about\" */\n        \"./views/Article.vue\");\n      },\n      props: true\n    }]\n  }]\n}); // router.beforeEach((to, from, next) => {\n//   var result = window.location.toString();\n//   if (result.indexOf(\"?onpc\") == -1) {\n//     var browser = {\n//       versions: (function () {\n//         var u = navigator.userAgent;\n//         return {\n//           //移动终端浏览器版本信息\n//           trident: u.indexOf(\"Trident\") > -1, //IE内核\n//           presto: u.indexOf(\"Presto\") > -1, //opera内核\n//           webKit: u.indexOf(\"AppleWebKit\") > -1, //苹果、谷歌内核\n//           gecko: u.indexOf(\"Gecko\") > -1 && u.indexOf(\"KHTML\") == -1, //火狐内核\n//           mobile:\n//             !!u.match(/AppleWebKit.*Mobile.*/) || !!u.match(/AppleWebKit/), //是否为移动终端\n//           ios: !!u.match(/i[^;]+;( U;)? CPU.+Mac OS X/), //ios终端\n//           android: u.indexOf(\"Android\") > -1, //android终端或者uc浏览器\n//           // android: u.indexOf(\"Android\") > -1 || u.indexOf(\"Linux\") > -1, //android终端或者uc浏览器\n//           linux: u.indexOf(\"Linux\") > -1,\n//           iPhone:\n//             u.indexOf(\"iPhone\") > -1 ||\n//             (u.indexOf(\"Mac\") > -1 && u.indexOf(\"Macintosh\") < 0), //是否为iPhone或者QQHD浏览器\n//           iPad: u.indexOf(\"iPad\") > -1, //是否iPad\n//           webApp: u.indexOf(\"Safari\") == -1 //是否web应该程序，没有头部与底部\n//         };\n//       })(),\n//       language: (navigator.browserLanguage || navigator.language).toLowerCase()\n//     };\n//     if (!browser.versions.iPad) {\n//       if (browser.versions.android || browser.versions.iPhone) {\n//         self.location = \"/mobile\"; //你要变成移动端的地址\n//       }\n//     }\n//   }\n//   next();\n// });\n\nexport default router;",{"version":3,"sources":["/home/su/code/RCAR2021Web_V2/desktop/src/router.js"],"names":["Vue","Router","Main","use","router","routes","path","component","name","meta","title","children","props"],"mappings":"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","sourcesContent":["import Vue from \"vue\";\nimport Router from \"vue-router\";\nimport Main from \"./views/Main.vue\";\nVue.use(Router);\n\nconst router = new Router({\n  routes: [\n    {\n      path: \"/\",\n      component: Main,\n      name: \"main\",\n      meta: {\n        title: 'RCAR 2020 - Conference on Real-time Computing and Robotics - IEEE Robotics and Automation Society',\n        // Description: 'The 2020 IEEE International Conference on Real-time Computing and Robotics (IEEE RCAR 2020) will take place from August 2 to 6, 2020 in Asahikawa, Japan. The objective of this conference is to provide a forum for researchers in robotics and real-time computing to share the latest results and to explore the opportunity of research collaboration. With wide applications of robots in industry and services sectors, real-time computing plays one of the major roles in various topics in robotics including real-time control, human-robot interactions, sensor perception and fusion, robot intelligence, etc. The scope of IEEE RCAR 2020 covers research, development and applications in the dynamic and exciting areas of real-time computing and robotics.',\n        // Keywords: 'IEEE, RCAR, Robot, robotic, conference, automation, society, www.ieee-rcar.org, ieee-rcar',\n      },\n\n      children: [\n        {\n          path: \"/\",\n          name: \"home\",\n          component: () => import(/* */ \"./views/Home.vue\")\n        },\n        {\n          path: \"/history\",\n          name: \"history\",\n          // route level code-splitting\n          // this generates a separate chunk (about.[hash].js) for this route\n          // which is lazy-loaded when the route is visited.\n          component: () =>\n            import(/* webpackChunkName: \"about\" */ \"./views/History.vue\")\n        },\n        {\n          path: \"/Committee\", // route level code-splitting\n          // this generates a separate chunk (about.[hash].js) for this route\n          // which is lazy-loaded when the route is visited.\n          component: () =>\n            import(/* webpackChunkName: \"about\" */ \"./views/Committee.vue\"), props: true\n        },\n        {\n          path: \"/program\", // route level code-splitting\n          // this generates a separate chunk (about.[hash].js) for this route\n          // which is lazy-loaded when the route is visited.\n          component: () =>\n            import(/* webpackChunkName: \"about\" */ \"./views/Program.vue\"), props: true\n        },\n        {\n          path: \"/FinalSubmission\", // route level code-splitting\n          // this generates a separate chunk (about.[hash].js) for this route\n          // which is lazy-loaded when the route is visited.\n          component: () =>\n            import(/* webpackChunkName: \"about\" */ \"./views/FinalSubmission.vue\"), props: true\n        },\n        {\n          path: \"/InitialSubmission\", // route level code-splitting\n          // this generates a separate chunk (about.[hash].js) for this route\n          // which is lazy-loaded when the route is visited.\n          component: () =>\n            import(/* webpackChunkName: \"about\" */ \"./views/InitialSubmission.vue\"), props: true\n        },\n        {\n          path: \"/CallForPapers\", // route level code-splitting\n          // this generates a separate chunk (about.[hash].js) for this route\n          // which is lazy-loaded when the route is visited.\n          component: () =>\n            import(/* webpackChunkName: \"about\" */ \"./views/CallForPapers.vue\"), props: true\n        },\n        {\n          path: \"/Registration\", // route level code-splitting\n          // this generates a separate chunk (about.[hash].js) for this route\n          // which is lazy-loaded when the route is visited.\n          component: () =>\n            import(/* webpackChunkName: \"about\" */ \"./views/Registration.vue\"), props: true\n          },\n        {\n          path: \"/Plenary\", // route level code-splitting\n          // this generates a separate chunk (about.[hash].js) for this route\n          // which is lazy-loaded when the route is visited.\n          component: () =>\n            import(/* webpackChunkName: \"about\" */ \"./views/Plenary.vue\"), props: true\n        },\n        {\n          path: \"/Keynote\", // route level code-splitting\n          // this generates a separate chunk (about.[hash].js) for this route\n          // which is lazy-loaded when the route is visited.\n          component: () =>\n            import(/* webpackChunkName: \"about\" */ \"./views/Keynote.vue\"), props: true\n        },\n        {\n          path: \"/Technical\", // route level code-splitting\n          // this generates a separate chunk (about.[hash].js) for this route\n          // which is lazy-loaded when the route is visited.\n          component: () =>\n            import(/* webpackChunkName: \"about\" */ \"./views/Technical.vue\"), props: true\n        },\n        {\n          path: \"/tutorials\", // route level code-splitting\n          // this generates a separate chunk (about.[hash].js) for this route\n          // which is lazy-loaded when the route is visited.\n          component: () =>\n            import(/* webpackChunkName: \"about\" */ \"./views/Tutorial.vue\"), props: true\n        },\n        {\n          path: \"/:title\", name: \"articles\", // route level code-splitting\n          // this generates a separate chunk (about.[hash].js) for this route\n          // which is lazy-loaded when the route is visited.\n          component: () =>\n            import(/* webpackChunkName: \"about\" */ \"./views/Article.vue\"), props: true\n        },\n        {\n          path: \"/:title\", name: \"articles\", // route level code-splitting\n          // this generates a separate chunk (about.[hash].js) for this route\n          // which is lazy-loaded when the route is visited.\n          component: () =>\n            import(/* webpackChunkName: \"about\" */ \"./views/Article.vue\"), props: true\n        },\n      ]\n    }\n  ]\n});\n\n// router.beforeEach((to, from, next) => {\n//   var result = window.location.toString();\n//   if (result.indexOf(\"?onpc\") == -1) {\n//     var browser = {\n//       versions: (function () {\n//         var u = navigator.userAgent;\n//         return {\n//           //移动终端浏览器版本信息\n//           trident: u.indexOf(\"Trident\") > -1, //IE内核\n//           presto: u.indexOf(\"Presto\") > -1, //opera内核\n//           webKit: u.indexOf(\"AppleWebKit\") > -1, //苹果、谷歌内核\n//           gecko: u.indexOf(\"Gecko\") > -1 && u.indexOf(\"KHTML\") == -1, //火狐内核\n//           mobile:\n//             !!u.match(/AppleWebKit.*Mobile.*/) || !!u.match(/AppleWebKit/), //是否为移动终端\n//           ios: !!u.match(/i[^;]+;( U;)? CPU.+Mac OS X/), //ios终端\n//           android: u.indexOf(\"Android\") > -1, //android终端或者uc浏览器\n//           // android: u.indexOf(\"Android\") > -1 || u.indexOf(\"Linux\") > -1, //android终端或者uc浏览器\n//           linux: u.indexOf(\"Linux\") > -1,\n//           iPhone:\n//             u.indexOf(\"iPhone\") > -1 ||\n//             (u.indexOf(\"Mac\") > -1 && u.indexOf(\"Macintosh\") < 0), //是否为iPhone或者QQHD浏览器\n//           iPad: u.indexOf(\"iPad\") > -1, //是否iPad\n//           webApp: u.indexOf(\"Safari\") == -1 //是否web应该程序，没有头部与底部\n//         };\n//       })(),\n//       language: (navigator.browserLanguage || navigator.language).toLowerCase()\n//     };\n//     if (!browser.versions.iPad) {\n//       if (browser.versions.android || browser.versions.iPhone) {\n//         self.location = \"/mobile\"; //你要变成移动端的地址\n//       }\n//     }\n//   }\n//   next();\n// });\n\nexport default router;\n"]}]}